<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.anytec.security.dao.TbGroupCameraMapper" >
  <resultMap id="BaseResultMap" type="cn.anytec.security.model.TbGroupCamera" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="group_status" property="groupStatus" jdbcType="INTEGER" />
    <result column="area" property="area" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="total_number" property="totalNumber" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, group_status, area, remarks, total_number
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.anytec.security.model.TbGroupCameraExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_group_camera
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_group_camera
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_group_camera
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.anytec.security.model.TbGroupCameraExample" >
    delete from tb_group_camera
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.anytec.security.model.TbGroupCamera" >
    insert into tb_group_camera (id, name, group_status, 
      area, remarks, total_number
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{groupStatus,jdbcType=INTEGER}, 
      #{area,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{totalNumber,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.anytec.security.model.TbGroupCamera" >
    insert into tb_group_camera
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="groupStatus != null" >
        group_status,
      </if>
      <if test="area != null" >
        area,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="totalNumber != null" >
        total_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="groupStatus != null" >
        #{groupStatus,jdbcType=INTEGER},
      </if>
      <if test="area != null" >
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="totalNumber != null" >
        #{totalNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.anytec.security.model.TbGroupCameraExample" resultType="java.lang.Integer" >
    select count(*) from tb_group_camera
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_group_camera
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.groupStatus != null" >
        group_status = #{record.groupStatus,jdbcType=INTEGER},
      </if>
      <if test="record.area != null" >
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.totalNumber != null" >
        total_number = #{record.totalNumber,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_group_camera
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      group_status = #{record.groupStatus,jdbcType=INTEGER},
      area = #{record.area,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      total_number = #{record.totalNumber,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.anytec.security.model.TbGroupCamera" >
    update tb_group_camera
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="groupStatus != null" >
        group_status = #{groupStatus,jdbcType=INTEGER},
      </if>
      <if test="area != null" >
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="totalNumber != null" >
        total_number = #{totalNumber,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.anytec.security.model.TbGroupCamera" >
    update tb_group_camera
    set name = #{name,jdbcType=VARCHAR},
      group_status = #{groupStatus,jdbcType=INTEGER},
      area = #{area,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      total_number = #{totalNumber,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>